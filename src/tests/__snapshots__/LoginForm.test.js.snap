// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component should render without crashing Component matches its snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    history={
        Object {
            "push": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div>
          <h3
                    style={
                              Object {
                                        "color": "rgba(0, 0, 0, 0.87)",
                                        "fontSize": 75,
                                        "textAlign": "center",
                                      }
                    }
          >
                    Vacation Tracker
          </h3>
</div>,
        <div>
          <div
                    className="body"
          />
          <div
                    className="grad"
          />
          <br />
          <div
                    className="login"
          >
                    <form
                              action=""
                              onSubmit={[Function]}
                    >
                              <input
                                        name="username"
                                        onChange={[Function]}
                                        placeholder="AssociateId"
                                        required={true}
                                        type="text"
                              />
                              <br />
                              <input
                                        name="password "
                                        onChange={[Function]}
                                        placeholder="Password"
                                        required={true}
                                        type="password"
                              />
                              <br />
                              <div
                                        className="loginButton"
                              >
                                        <button
                                                  className="submit"
                                                  type="submit"
                                        >
                                                  Assocaite Login
                                        </button>
                              </div>
                    </form>
          </div>
</div>,
        <div>
          <Modal
                    animationDuration={500}
                    center={true}
                    classNames={Object {}}
                    classes={
                              Object {
                                        "closeButton": "styles_closeButton__20ID4",
                                        "closeIcon": "styles_closeIcon__1QwbI",
                                        "modal": "styles_modal__gNwvD",
                                        "overlay": "styles_overlay__CLSq-",
                                        "overlayCenter": "styles_overlayCenter__YHoO7",
                                        "transitionEnter": "styles_transitionEnter__3j_-a",
                                        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
                                        "transitionExit": "styles_transitionExit__1KmEf",
                                        "transitionExitActive": "styles_transitionExitActive__1nQXw",
                                      }
                    }
                    closeIconSize={28}
                    closeIconSvgPath={
                              <path
                                        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
                              />
                    }
                    closeOnEsc={true}
                    closeOnOverlayClick={true}
                    onClose={[Function]}
                    onEntered={null}
                    onEscKeyDown={null}
                    onExited={null}
                    onOverlayClick={null}
                    open={false}
                    showCloseIcon={true}
                    styles={Object {}}
          >
                    <h3>
                              Unauthorized Client error
                    </h3>
          </Modal>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3
            style={
                        Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontSize": 75,
                                    "textAlign": "center",
                                  }
            }
>
            Vacation Tracker
</h3>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Vacation Tracker",
            "style": Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "fontSize": 75,
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Vacation Tracker",
          "type": "h3",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="body"
/>,
            <div
              className="grad"
/>,
            <br />,
            <div
              className="login"
>
              <form
                            action=""
                            onSubmit={[Function]}
              >
                            <input
                                          name="username"
                                          onChange={[Function]}
                                          placeholder="AssociateId"
                                          required={true}
                                          type="text"
                            />
                            <br />
                            <input
                                          name="password "
                                          onChange={[Function]}
                                          placeholder="Password"
                                          required={true}
                                          type="password"
                            />
                            <br />
                            <div
                                          className="loginButton"
                            >
                                          <button
                                                        className="submit"
                                                        type="submit"
                                          >
                                                        Assocaite Login
                                          </button>
                            </div>
              </form>
</div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "body",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "grad",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                action=""
                onSubmit={[Function]}
>
                <input
                                name="username"
                                onChange={[Function]}
                                placeholder="AssociateId"
                                required={true}
                                type="text"
                />
                <br />
                <input
                                name="password "
                                onChange={[Function]}
                                placeholder="Password"
                                required={true}
                                type="password"
                />
                <br />
                <div
                                className="loginButton"
                >
                                <button
                                                className="submit"
                                                type="submit"
                                >
                                                Assocaite Login
                                </button>
                </div>
</form>,
              "className": "login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "action": "",
                "children": Array [
                  <input
                    name="username"
                    onChange={[Function]}
                    placeholder="AssociateId"
                    required={true}
                    type="text"
/>,
                  <br />,
                  <input
                    name="password "
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
/>,
                  <br />,
                  <div
                    className="loginButton"
>
                    <button
                                        className="submit"
                                        type="submit"
                    >
                                        Assocaite Login
                    </button>
</div>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "username",
                    "onChange": [Function],
                    "placeholder": "AssociateId",
                    "required": true,
                    "type": "text",
                  },
                  "ref": "username",
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password ",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "required": true,
                    "type": "password",
                  },
                  "ref": "password",
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="submit"
                      type="submit"
>
                      Assocaite Login
</button>,
                    "className": "loginButton",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Assocaite Login",
                      "className": "submit",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Assocaite Login",
                    "type": "button",
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Modal
            animationDuration={500}
            center={true}
            classNames={Object {}}
            classes={
                        Object {
                                    "closeButton": "styles_closeButton__20ID4",
                                    "closeIcon": "styles_closeIcon__1QwbI",
                                    "modal": "styles_modal__gNwvD",
                                    "overlay": "styles_overlay__CLSq-",
                                    "overlayCenter": "styles_overlayCenter__YHoO7",
                                    "transitionEnter": "styles_transitionEnter__3j_-a",
                                    "transitionEnterActive": "styles_transitionEnterActive___eQs7",
                                    "transitionExit": "styles_transitionExit__1KmEf",
                                    "transitionExitActive": "styles_transitionExitActive__1nQXw",
                                  }
            }
            closeIconSize={28}
            closeIconSvgPath={
                        <path
                                    d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
                        />
            }
            closeOnEsc={true}
            closeOnOverlayClick={true}
            onClose={[Function]}
            onEntered={null}
            onEscKeyDown={null}
            onExited={null}
            onOverlayClick={null}
            open={false}
            showCloseIcon={true}
            styles={Object {}}
>
            <h3>
                        Unauthorized Client error
            </h3>
</Modal>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animationDuration": 500,
            "center": true,
            "children": <h3>
              Unauthorized Client error
</h3>,
            "classNames": Object {},
            "classes": Object {
              "closeButton": "styles_closeButton__20ID4",
              "closeIcon": "styles_closeIcon__1QwbI",
              "modal": "styles_modal__gNwvD",
              "overlay": "styles_overlay__CLSq-",
              "overlayCenter": "styles_overlayCenter__YHoO7",
              "transitionEnter": "styles_transitionEnter__3j_-a",
              "transitionEnterActive": "styles_transitionEnterActive___eQs7",
              "transitionExit": "styles_transitionExit__1KmEf",
              "transitionExitActive": "styles_transitionExitActive__1nQXw",
            },
            "closeIconSize": 28,
            "closeIconSvgPath": <path
              d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
/>,
            "closeOnEsc": true,
            "closeOnOverlayClick": true,
            "onClose": [Function],
            "onEntered": null,
            "onEscKeyDown": null,
            "onExited": null,
            "onOverlayClick": null,
            "open": false,
            "showCloseIcon": true,
            "styles": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Unauthorized Client error",
            },
            "ref": null,
            "rendered": "Unauthorized Client error",
            "type": "h3",
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div>
            <h3
                        style={
                                    Object {
                                                "color": "rgba(0, 0, 0, 0.87)",
                                                "fontSize": 75,
                                                "textAlign": "center",
                                              }
                        }
            >
                        Vacation Tracker
            </h3>
</div>,
          <div>
            <div
                        className="body"
            />
            <div
                        className="grad"
            />
            <br />
            <div
                        className="login"
            >
                        <form
                                    action=""
                                    onSubmit={[Function]}
                        >
                                    <input
                                                name="username"
                                                onChange={[Function]}
                                                placeholder="AssociateId"
                                                required={true}
                                                type="text"
                                    />
                                    <br />
                                    <input
                                                name="password "
                                                onChange={[Function]}
                                                placeholder="Password"
                                                required={true}
                                                type="password"
                                    />
                                    <br />
                                    <div
                                                className="loginButton"
                                    >
                                                <button
                                                            className="submit"
                                                            type="submit"
                                                >
                                                            Assocaite Login
                                                </button>
                                    </div>
                        </form>
            </div>
</div>,
          <div>
            <Modal
                        animationDuration={500}
                        center={true}
                        classNames={Object {}}
                        classes={
                                    Object {
                                                "closeButton": "styles_closeButton__20ID4",
                                                "closeIcon": "styles_closeIcon__1QwbI",
                                                "modal": "styles_modal__gNwvD",
                                                "overlay": "styles_overlay__CLSq-",
                                                "overlayCenter": "styles_overlayCenter__YHoO7",
                                                "transitionEnter": "styles_transitionEnter__3j_-a",
                                                "transitionEnterActive": "styles_transitionEnterActive___eQs7",
                                                "transitionExit": "styles_transitionExit__1KmEf",
                                                "transitionExitActive": "styles_transitionExitActive__1nQXw",
                                              }
                        }
                        closeIconSize={28}
                        closeIconSvgPath={
                                    <path
                                                d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
                                    />
                        }
                        closeOnEsc={true}
                        closeOnOverlayClick={true}
                        onClose={[Function]}
                        onEntered={null}
                        onEscKeyDown={null}
                        onExited={null}
                        onOverlayClick={null}
                        open={false}
                        showCloseIcon={true}
                        styles={Object {}}
            >
                        <h3>
                                    Unauthorized Client error
                        </h3>
            </Modal>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3
              style={
                            Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontSize": 75,
                                          "textAlign": "center",
                                        }
              }
>
              Vacation Tracker
</h3>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Vacation Tracker",
              "style": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontSize": 75,
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Vacation Tracker",
            "type": "h3",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="body"
/>,
              <div
                className="grad"
/>,
              <br />,
              <div
                className="login"
>
                <form
                                action=""
                                onSubmit={[Function]}
                >
                                <input
                                                name="username"
                                                onChange={[Function]}
                                                placeholder="AssociateId"
                                                required={true}
                                                type="text"
                                />
                                <br />
                                <input
                                                name="password "
                                                onChange={[Function]}
                                                placeholder="Password"
                                                required={true}
                                                type="password"
                                />
                                <br />
                                <div
                                                className="loginButton"
                                >
                                                <button
                                                                className="submit"
                                                                type="submit"
                                                >
                                                                Assocaite Login
                                                </button>
                                </div>
                </form>
</div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "body",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "grad",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <form
                  action=""
                  onSubmit={[Function]}
>
                  <input
                                    name="username"
                                    onChange={[Function]}
                                    placeholder="AssociateId"
                                    required={true}
                                    type="text"
                  />
                  <br />
                  <input
                                    name="password "
                                    onChange={[Function]}
                                    placeholder="Password"
                                    required={true}
                                    type="password"
                  />
                  <br />
                  <div
                                    className="loginButton"
                  >
                                    <button
                                                      className="submit"
                                                      type="submit"
                                    >
                                                      Assocaite Login
                                    </button>
                  </div>
</form>,
                "className": "login",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "action": "",
                  "children": Array [
                    <input
                      name="username"
                      onChange={[Function]}
                      placeholder="AssociateId"
                      required={true}
                      type="text"
/>,
                    <br />,
                    <input
                      name="password "
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
/>,
                    <br />,
                    <div
                      className="loginButton"
>
                      <button
                                            className="submit"
                                            type="submit"
                      >
                                            Assocaite Login
                      </button>
</div>,
                  ],
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "username",
                      "onChange": [Function],
                      "placeholder": "AssociateId",
                      "required": true,
                      "type": "text",
                    },
                    "ref": "username",
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "password ",
                      "onChange": [Function],
                      "placeholder": "Password",
                      "required": true,
                      "type": "password",
                    },
                    "ref": "password",
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="submit"
                        type="submit"
>
                        Assocaite Login
</button>,
                      "className": "loginButton",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Assocaite Login",
                        "className": "submit",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Assocaite Login",
                      "type": "button",
                    },
                    "type": "div",
                  },
                ],
                "type": "form",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Modal
              animationDuration={500}
              center={true}
              classNames={Object {}}
              classes={
                            Object {
                                          "closeButton": "styles_closeButton__20ID4",
                                          "closeIcon": "styles_closeIcon__1QwbI",
                                          "modal": "styles_modal__gNwvD",
                                          "overlay": "styles_overlay__CLSq-",
                                          "overlayCenter": "styles_overlayCenter__YHoO7",
                                          "transitionEnter": "styles_transitionEnter__3j_-a",
                                          "transitionEnterActive": "styles_transitionEnterActive___eQs7",
                                          "transitionExit": "styles_transitionExit__1KmEf",
                                          "transitionExitActive": "styles_transitionExitActive__1nQXw",
                                        }
              }
              closeIconSize={28}
              closeIconSvgPath={
                            <path
                                          d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
                            />
              }
              closeOnEsc={true}
              closeOnOverlayClick={true}
              onClose={[Function]}
              onEntered={null}
              onEscKeyDown={null}
              onExited={null}
              onOverlayClick={null}
              open={false}
              showCloseIcon={true}
              styles={Object {}}
>
              <h3>
                            Unauthorized Client error
              </h3>
</Modal>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "animationDuration": 500,
              "center": true,
              "children": <h3>
                Unauthorized Client error
</h3>,
              "classNames": Object {},
              "classes": Object {
                "closeButton": "styles_closeButton__20ID4",
                "closeIcon": "styles_closeIcon__1QwbI",
                "modal": "styles_modal__gNwvD",
                "overlay": "styles_overlay__CLSq-",
                "overlayCenter": "styles_overlayCenter__YHoO7",
                "transitionEnter": "styles_transitionEnter__3j_-a",
                "transitionEnterActive": "styles_transitionEnterActive___eQs7",
                "transitionExit": "styles_transitionExit__1KmEf",
                "transitionExitActive": "styles_transitionExitActive__1nQXw",
              },
              "closeIconSize": 28,
              "closeIconSvgPath": <path
                d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
/>,
              "closeOnEsc": true,
              "closeOnOverlayClick": true,
              "onClose": [Function],
              "onEntered": null,
              "onEscKeyDown": null,
              "onExited": null,
              "onOverlayClick": null,
              "open": false,
              "showCloseIcon": true,
              "styles": Object {},
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Unauthorized Client error",
              },
              "ref": null,
              "rendered": "Unauthorized Client error",
              "type": "h3",
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
